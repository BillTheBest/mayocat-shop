group MarketplaceProductDAO;

findBySlugAndTenant() ::= <<
  SELECT entity.*, product.*,
         tenant_entity.id as tenant_entity_id,
         tenant_entity.slug as tenant_entity_slug,
         tenant_entity.type as tenant_entity_type,
         tenant_entity.tenant_id as tenant_entity_tenant_id,
         tenant_entity.parent_id as tenant_entity_parent_id,
         tenant.default_host as tenant_entity_default_host,
         tenant.configuration as tenant_entity_configuration,
         tenant.configuration_version as tenant_entity_configuration_version,
         tenant.name as tenant_entity_name,
         tenant.creation_date as tenant_entity_creation_date,
         tenant.featured_image_id as tenant_entity_featured_image_id,
         tenant.contact_email as tenant_entity_contact_email,
         tenant.description as tenant_entity_description,
         localization_data(product.entity_id)
  FROM   entity
         INNER JOIN product
                 ON entity.id = product.entity_id
         INNER JOIN entity as tenant_entity
                 ON entity.tenant_id = tenant_entity.id
         INNER JOIN tenant
                 ON tenant_entity.id = tenant.entity_id
  WHERE  entity.slug = :slug
  AND    tenant_entity.slug = :tenantSlug
>>

findAllNotVariants() ::= <<
    SELECT entity.*, product.*,
           tenant_entity.id as tenant_entity_id,
           tenant_entity.slug as tenant_entity_slug,
           tenant_entity.type as tenant_entity_type,
           tenant_entity.tenant_id as tenant_entity_tenant_id,
           tenant_entity.parent_id as tenant_entity_parent_id,
           tenant.default_host as tenant_entity_default_host,
           tenant.configuration as tenant_entity_configuration,
           tenant.configuration_version as tenant_entity_configuration_version,
           tenant.name as tenant_entity_name,
           tenant.creation_date as tenant_entity_creation_date,
           tenant.featured_image_id as tenant_entity_featured_image_id,
           tenant.contact_email as tenant_entity_contact_email,
           tenant.description as tenant_entity_description,
           localization_data(product.entity_id)
    FROM   entity
           INNER JOIN product
                   ON entity.id = product.entity_id
           INNER JOIN entity as tenant_entity
                   ON entity.tenant_id = tenant_entity.id
           INNER JOIN tenant
                   ON tenant_entity.id = tenant.entity_id
    WHERE  (entity.parent_id IS NULL OR product.virtual)
    ORDER  BY product.title ASC
    LIMIT  :number
    OFFSET :offset
>>

countAllNotVariants() ::= <<
    SELECT count(product.entity_id)
    FROM   entity
           INNER JOIN product
                   ON entity.id = product.entity_id
    WHERE  entity.type = 'product'
    AND    (entity.parent_id IS NULL OR product.virtual)
>>

findAllWithTitleLike() ::= <<
    SELECT entity.*, product.*,
           tenant_entity.id as tenant_entity_id,
           tenant_entity.slug as tenant_entity_slug,
           tenant_entity.type as tenant_entity_type,
           tenant_entity.tenant_id as tenant_entity_tenant_id,
           tenant_entity.parent_id as tenant_entity_parent_id,
           tenant.default_host as tenant_entity_default_host,
           tenant.configuration as tenant_entity_configuration,
           tenant.configuration_version as tenant_entity_configuration_version,
           tenant.name as tenant_entity_name,
           tenant.creation_date as tenant_entity_creation_date,
           tenant.featured_image_id as tenant_entity_featured_image_id,
           tenant.contact_email as tenant_entity_contact_email,
           tenant.description as tenant_entity_description,
           localization_data(product.entity_id)
    FROM   entity
           INNER JOIN product
                   ON entity.id = product.entity_id
           INNER JOIN entity as tenant_entity
                   ON entity.tenant_id = tenant_entity.id
           INNER JOIN tenant
                   ON tenant_entity.id = tenant.entity_id
    WHERE  entity.type = 'product'
           AND (entity.parent_id IS NULL OR product.virtual)
           AND lower(m_unaccent(product.title)) LIKE ('%' || lower(m_unaccent(:title)) || '%')
    ORDER  BY product.title ASC
    LIMIT  :number
    OFFSET :offset
>>

countAllWithTitleLike() ::= <<
    SELECT count(product.entity_id)
    FROM   entity
           INNER JOIN product
                   ON entity.id = product.entity_id
    WHERE  entity.type = 'product'
           AND (entity.parent_id IS NULL OR product.virtual)
           AND lower(m_unaccent(product.title)) LIKE ('%' || lower(m_unaccent(':title')) || '%')
>>

findAllForTenant() ::= <<
    SELECT entity.*, product.*,
           tenant_entity.id as tenant_entity_id,
           tenant_entity.slug as tenant_entity_slug,
           tenant_entity.type as tenant_entity_type,
           tenant_entity.tenant_id as tenant_entity_tenant_id,
           tenant_entity.parent_id as tenant_entity_parent_id,
           tenant.default_host as tenant_entity_default_host,
           tenant.configuration as tenant_entity_configuration,
           tenant.configuration_version as tenant_entity_configuration_version,
           tenant.name as tenant_entity_name,
           tenant.creation_date as tenant_entity_creation_date,
           tenant.featured_image_id as tenant_entity_featured_image_id,
           tenant.contact_email as tenant_entity_contact_email,
           tenant.description as tenant_entity_description,
           localization_data(product.entity_id)
    FROM   entity
           INNER JOIN product
                   ON entity.id = product.entity_id
           INNER JOIN entity as tenant_entity
                   ON entity.tenant_id = tenant_entity.id
           INNER JOIN tenant
                   ON tenant_entity.id = tenant.entity_id
    WHERE  (entity.parent_id IS NULL OR product.virtual)
           AND tenant.entity_id = :tenant.id
    ORDER  BY product.title ASC
    LIMIT  :number
    OFFSET :offset
>>
